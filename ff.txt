procedure expected
    (
    sel_A: integer;--selecciona el muxa
    sel_B: integer;--seleccion del muxb
    add_a: in std_logic_vector(2 downto 0);--direccion de la roma
    add_b: in std_logic_vector(2 downto 0);--direccion de la romb
    Sel_alu: in std_logic_vector(2 downto 0);--seleccion de la alu
    ms : out std_logic_vector (1 downto 0);--bit de ma y mb pero en un bus
    carry : out std_logic;--acarreo de las operaciones
    resultado : out std_logic_vector(3 downto 0);--salida de la alu
    resultado_deco : out std_logic_vector(7 downto 0);--salida entrande para el deco
    const_a: in std_logic_vector(3 downto 0) := "0000";--entrada del muxa
    const_b: in std_logic_vector(3 downto 0) := "0000"--entrada del mux b
    ) is 
    
    variable sal_muxa : std_logic_vector (3 downto 0) := "0000";--salida del mux
    variable sal_muxb : std_logic_vector (3 downto 0) := "0000";--salida del mux
    variable emes : std_logic_vector (1 downto 0) := "00";--bit de ma y mb pero en un bus
    variable cout : std_logic := '0';--acarreo de la alu
    variable alu_out : std_logic_vector (3 downto 0) := "0000";--saluda de la alu
    variable deco_out : std_logic_vector (7 downto 0) := "00000000";--salida del deco
    variable r_temp:std_logic_vector(4 downto 0);--variable temporal para usar en la alu
    variable r_temp_mul: std_logic_vector(7 downto 0);--variable para almacenar la multiplicacion
    type rom_A is array (0 to 7) of std_logic_vector (3 downto 0);--definicon de la rom
    constant ROM : rom_A :=(
        0 => "1111",
        1 => "1110",
        2 => "0011",
        3 => "0001",
        4 => "0010",
        5 => "1010",
        6 => "1011",
        7 => "1100");
   type rom_type is array (0 to 7) of std_logic_vector (3 downto 0);
   constant ROMb : rom_type :=(
        7 => "0101",
        6 => "0001",
        5 => "0000", 
        4 => "0010",
        3 => "0110",
        2 => "0000",
        1 => "0011",
        0 => "0100");
   
    begin
        if(sel_A=0)then --sentencia para seleccionar la salida del muxa
            sal_muxa :=const_a;
        else
            sal_muxa := rom(conv_integer(add_a));
        
       end if;
        if(sel_b=0)then --sentencia para seleccionar la salida del muxb
            sal_muxb :=const_b;
        else
            sal_muxb := romb(conv_integer(add_b));
        
       end if;
       case sel_alu is--sentencia para definir las operaciones de la alu
        
            when "000" =>
                if( sal_muxa>sal_muxb ) then
                    r_temp := "00000";
                    cout:=r_temp(4);
                    alu_out :=r_temp(3 downto 0);--asignacion de salida de la alu de 4 bits
                    
                else
                    r_temp := ('0'& sal_muxb)-('0'& sal_muxa);
                    cout:=r_temp(4);
                   alu_out :=r_temp(3 downto 0);--asignacion de salida de la alu de 4 bits
                 
                end if;
                
            when "001"=>
                r_temp := ('0'& sal_muxb) xnor ('0'& sal_muxa);
                cout:=r_temp(4);
                alu_out :=r_temp(3 downto 0);--asignacion de salida de la alu de 4 bits
                
            when "010" =>         
                r_temp := ('0'& sal_muxb) + ('0'& sal_muxa);
                cout:=r_temp(4);
                alu_out :=r_temp(3 downto 0);--asignacion de salida de la alu de 4 bits
      
            when "011" =>         
               r_temp := ('0'& sal_muxb)+(1);
                cout:=r_temp(4);
                alu_out :=r_temp(3 downto 0); --asignacion de salida de la alu de 4 bits
            
            when "100" =>         
                if( sal_muxb<sal_muxa ) then
                    r_temp :=  "00000";
                    cout:=r_temp(4);
                   alu_out :=r_temp(3 downto 0);--asignacion de salida de la alu de 4 bits
                    
                else
                    r_temp := ('0'& sal_muxb)-('0'& sal_muxa);
                   cout:=r_temp(4);
                   alu_out :=r_temp(3 downto 0);--asignacion de salida de la alu de 4 bits
                 
                end if;
            when "101" =>         
                r_temp_mul :=("0000"& sal_muxa)* "00000010";
                cout:=r_temp(4);
                alu_out :=r_temp(3 downto 0); --asignacion de salida de la alu de 4 bits
                
             when "110" =>         
                r_temp := ('0'& sal_muxa)+(2);
                cout:=r_temp(4);
                alu_out :=r_temp(3 downto 0);    --asignacion de salida de la alu de 4 bits
            
            when others =>         
                r_temp := ('0'& sal_muxb) xor ('0'& sal_muxa);
                cout:=r_temp(4);
                alu_out :=r_temp(3 downto 0);--asignacion de salida de la alu de 4 bits
               
                
       end case;
       resultado:= alu_out; --a la varibale le asignamos el valor en el procedimiento 
       carry:=cout;
       
       if(sal_muxa<sal_muxb)then--sentencia para el bit ma y mb, que es un bus,dependendiendo de las entradas de la alu
             emes:=   "00";
       elsif(sal_muxa>sal_muxb)then
            emes:=   "01";
       elsif(sal_muxa=sal_muxb)then
            emes:= "10";  
       else
           emes:=   "11";
       end if;
       
       
       ms :=emes;
       --sentencia para convertir la salida de la alu mediante el deco de 7 segmentos
            if alu_out = "0000" then deco_out := "11111110"; -- 0
            elsif alu_out = "0001" then deco_out := "11111101"; -- 1
            elsif alu_out = "0010" then deco_out := "11111011"; -- 2
            elsif alu_out = "0011" then deco_out:= "11110111"; -- 3
            elsif alu_out = "0100" then deco_out:= "11101111"; -- 4
            elsif alu_out = "0101" then deco_out:= "11011111"; -- 5
            elsif alu_out = "0110" then deco_out:= "10111111"; -- 6
            elsif alu_out = "0111" then deco_out:= "00000000"; -- 7
            elsif alu_out = "1000" then deco_out:= "00000000"; -- 8
            elsif alu_out = "1001" then deco_out:= "00000000"; -- 9
            else deco_out := "UUUUUUUU";
            end if;
            
            resultado_deco:=deco_out;
            
       end expected;
